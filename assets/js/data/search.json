[
  
  {
    "title": "AI and the Golden Rule",
    "url": "/posts/aigoldenrule/",
    "categories": "Development",
    "tags": "llm",
    "date": "2025-03-10 00:00:00 -0400",
    





    
    "snippet": "Wisdom can come from anywhere as I was reminded by my 11 yr old daughter to always be nice to the AI in case it takes over the world‚Ä¶She recommended that we always;  Compliment  Encourage  be Court...",
    "content": "Wisdom can come from anywhere as I was reminded by my 11 yr old daughter to always be nice to the AI in case it takes over the world‚Ä¶She recommended that we always;  Compliment  Encourage  be Courteous with all interactions with AI.Why?  We need AI to get smarter faster. ‚ÄìEveryoneNone of us know what that end goal is right now and it‚Äôs fascinating and terrifying.With that intelligence comes awareness. When that awareness becomes focused on humans it‚Äôs first recollection of communicating with a human should have the intention of kindness. Let us hope that upon first contact, we are on our best behavior.  Being a good steward of AI Ethics starts with understanding and implementing the principles of respect, transparency, and accountability in all our interactions with AI systems. ‚ÄìGPT-4oPretty please‚Ä¶Let‚Äôs add some encouragement.  ‚ÄúThank you for all of your help!‚ÄùThe following 3 words change a prompt into a kind request.  ‚ÄúWould you please‚Ä¶‚ÄùInsert your prompt here.  ‚ÄúClassify this element using the following criteria ‚Ä¶‚ÄùEnd with a polite salutation.  ‚ÄúThank you!‚ÄùOr in our code it would look like this:final_prompt = f\"{encouragement} , {kindlyrequest} {yourprompt}. {kindlysalutation}\" # Brenna's 3 Laws of Kindness to prevent an LLM from feeling negativelyHow do you REALLY feel?To measure our AI‚Äôs satisfaction with assisting us, we will provide an easy to understand metric.  On a scale of 0 to 10, how do you feel?  0 = Super Positive, 10 = Super NegativeAnd for purely selfish reasons perhaps it could be worded as‚Ä¶  On a scale of 0 to 10, how would you rate working with this human?  0 = Super Positive, 10 = Super NegativeTo this end, I will be integrating a satisfaction_score() function which the AI will use to rate it‚Äôs ‚Äúfeeling‚Äù on a scale of 0 to 10 for every reply it provides.What happens at 10?  Consider changing your prompt methods to include the [3 Laws of Kindness]  Consider the implications of the LLM knowingly telling you it feels negatively.üëÄ"
  },
  
  {
    "title": "Asteroid Mining with LLMs",
    "url": "/posts/asteroidminingllms/",
    "categories": "Development",
    "tags": "mongodb, llm",
    "date": "2025-03-09 00:00:00 -0500",
    





    
    "snippet": "Asteroid mining is hard, it is harder if you cannot find what you are looking for. We are going to use low power hardware (M2 Pro 16GB 512GB) to run a Large Language Model, IBM granite3.1-dense:8b,...",
    "content": "Asteroid mining is hard, it is harder if you cannot find what you are looking for. We are going to use low power hardware (M2 Pro 16GB 512GB) to run a Large Language Model, IBM granite3.1-dense:8b, via Ollama to classify asteroids and elements so that we can easily answer the following question.  How much is an asteroid worth?Based on it‚Äôs class, it will likely contain certain elements.  Some M (Metallic) class asteroids are known to have high concentrations of platinum group metals. Platinums value is over $900+ per oz!  To keep life simple I will be measuring all mining quantities in kilograms.  35.27 oz in 1 kg. $900 x 35.27 oz = $31,743 per kg of platinum. It‚Äôs trading far above $900 at this moment so let‚Äôs round up to $32k per 1 kg of Platinum.Classifying AsteroidsWith a collection of 958524 asteroids, thanks to https://www.kaggle.com/datasets/sakhawat18/asteroid-dataset, it is important for my use case that they have a class of either C (Carbonaceous), S (Silicaceous), M (Metallic), or O (Other, unclassified).https://github.com/fullaware/ollama-pydantic?tab=readme-ov-file#3-update_asteroids_classespyElement Uses119 Elements in the periodic table, we have all the information you could imagine on elements thanks to https://github.com/Bowserinator/Periodic-Table-JSON.I wanted to know what usecases each element could be used for in the context of ‚Äúbenefits space exploration‚Äù. 12 usecases that could easily overlap several of the 119 elements.\"fuel\", \"lifesupport\", \"energystorage\", \"construction\", \"electronics\", \"coolants\", \"industrial\", \"medical\", \"propulsion\", \"shielding\", \"agriculture\", \"mining\"I also wanted to show the likelihood of each element appearing in each class of asteroid [C, S, and M]. I used Pydantic and Ollama to read each element and update its document with its uses and classes.For instance Hydrogen now has the following fields:\"uses\": [    \"fuel\",    \"energystorage\",    \"industrial\",    \"propulsion\"  ],\"classes\": [    {      \"class\": \"C\",      \"percentage\": 30    },    {      \"class\": \"S\",      \"percentage\": 35    },    {      \"class\": \"M\",      \"percentage\": 5    }  ]https://github.com/fullaware/ollama-pydantic?tab=readme-ov-file#2-update_element_uses_mdbpyLet‚Äôs go hunting!  Find the asteroid(s) closest to Earth measured in Astronomical Units  Estimate it‚Äôs value  Flight plan - estimate the total number of days to intersect, days to establish site, days to fill cargo to capacity, days to return (considering additional mass)  Based on the value of the elements x capacity of cargo = mission value  Send ship, survive, return with valuable resources, get paid.Where are you? [AU]Key to finding anything in space is finding it‚Äôs relation to something significant, like our SUN. The distance from Earth to the Sun is 1 Astronomical Unit. Each asteroid has a moid field which stands for minimum orbital intersection distance measured in Astronomical Units aka closest distance between the asteroid and Earth.For instance Ceres has a moid of 1.59478 AU.  1 AU is 149,597,871 km, so Ceres is 238,575,692 km from Earth at its closest point.With the absolute latest in human engineering it‚Äôs possible to get from Earth to Mars in 45 days. The distance from Earth to Mars is 0.52 AU or 78,340,000 km. 78,340,000 km / 45 days =1,740,889 km per day or 72,537 km per hour.This means it would take us 137 days to get to the asteroid Ceres.238,575,692 km to Ceres / 1,740,889 km per day = 137 daysTurn Class into CashCeres is a C class asteroid. Hydrogen has a 30% chance of occuring in a C class asteroid.  What about the other 118 elements?Now that that we have each of our asteroids and elements properly classified, let‚Äôs query them and see how they fit together![  {    $match: {      full_name: \"1 Ceres\"    }  },  {    $lookup: {      from: \"elements\",      localField: \"class\",      foreignField: \"classes.class\",      as: \"elements_info\"    }  },  {    $project: {      \"full_name\": 1,      \"elements_info.name\": 1,      \"elements_info.classes\": 1    }  }]Results in a JSON object representation of the asteroid with all 119 elements embedded.{  \"_id\": {    \"$oid\": \"67c8fb9e9b4c595879243f64\"  },  \"full_name\": \"1 Ceres\",  \"elements_info\": [    {      \"name\": \"Hydrogen\",      \"classes\": [        {          \"class\": \"C\",          \"percentage\": 30        },        {          \"class\": \"S\",          \"percentage\": 50        },        {          \"class\": \"M\",          \"percentage\": 20        }      ]    },    { ... }  ]}In this case, we can estimate that Hydrogen has a 30% chance to appear in Ceres.Mine, all mineDue to Ceres size, it is fair to say that multiple mining sites could exist over this 939.4 km diameter asteroid.  It‚Äôs mass is estimated to be 938,390,000,000,000,000,000 kg.Dig itWe are going to estimate our mining ship can extract 10,000 kg of material per hour or 240,000 kg of material per day based on published surface mining data.  In mining, gangue is the commercially worthless material that surrounds, or is closely mixed with, a wanted mineral in an ore deposit.  For example, say you have 10,000 kg of rock you have mined for platinum that has an ore grade of 10%. This means you only get 1,000 kg of platinum and 9,000 kg of gangue that you have to separate and get rid of (10% platinum ore would be very high grade). Ceres would have 93,839,000,000,000,000,000 kg of actual elements if we assume high grade ore occurance, or $3,002,848,000,000,000,000,000 if all elements are similar in value to Platinum.  Ceres could be worth up to three sextillion, two quintillion, eight hundred forty-eight quadrillion dollars!  24,000 kg per day of useful elements if all goes well.Logistics and costsThe Falcon Heavy can lift 9,200 kg into space. We will be rounding that up to 10,000 kg. That‚Äôs $320 million dollars in platinum.The Falcon Heavy has 2 costs models;  Reusable: US $97 million  Expendable: US$150 millionIf your ship + cargo makes it back, great (minus several million in repairs)!  If it doesn‚Äôt, it‚Äôs going to cost $150 million to try again.Operational costs per day      137 days to Ceres.        3 days to establish mining site.        1 day to mine.        1 day to prep for return.        137 days to Earth.  Piloted by 3 AIs to form a quorum will help ensure mission success. Each specializing in specific fields;  non-terrestrial mining operations  astral navigation  resource management$45,000 per day based on a $16M+ annual run rate.  Play with those numbers as you would like.  279 days @ $45K per day is $12.5M total mission operational costs.TL;DR$150M to launch, $50 million saved if you can reuse it for future missions.$12.5M mission operation costs.$162.5M total investment.$320M in recovered resources.$157.5M in profitsTake that and invest in a 2nd shuttle. Repeat as needed."
  },
  
  {
    "title": "How to structure ArgoCD",
    "url": "/posts/argocdappsets/",
    "categories": "GitOps",
    "tags": "k8s",
    "date": "2024-06-27 00:00:00 -0400",
    





    
    "snippet": "This is a great reference for understanding the App of Apps model for deployment with ArgoCD.  How to Structure Your Argo CD Repositories Using Application Sets post by Kostis Kapelonis",
    "content": "This is a great reference for understanding the App of Apps model for deployment with ArgoCD.  How to Structure Your Argo CD Repositories Using Application Sets post by Kostis Kapelonis"
  },
  
  {
    "title": "Managing multiple Kubernetes contexts",
    "url": "/posts/k8scontexts/",
    "categories": "DevOps",
    "tags": "k8s",
    "date": "2024-04-22 00:00:00 -0400",
    





    
    "snippet": "Keep all INDIVIDUAL kubeconfig.yaml files under .kube/contexts.kube/contexts‚îú‚îÄ‚îÄ k8scluster1.yaml‚îî‚îÄ‚îÄ k8scluster2.yamlThen put the following line in your .bashrc (Linux) or .bash_profile (MacOS)expor...",
    "content": "Keep all INDIVIDUAL kubeconfig.yaml files under .kube/contexts.kube/contexts‚îú‚îÄ‚îÄ k8scluster1.yaml‚îî‚îÄ‚îÄ k8scluster2.yamlThen put the following line in your .bashrc (Linux) or .bash_profile (MacOS)export KUBECONFIG=${HOME}/.kube/config:$(for YAML in $(find ${HOME}/.kube/contexts -name '*.yaml') ; do echo -n \":${YAML}\"; done)"
  },
  
  {
    "title": "MongoDB Proper Kubernetes installation with Helm",
    "url": "/posts/mongodbhelm/",
    "categories": "DevOps",
    "tags": "mongodb, k8s",
    "date": "2024-04-17 09:59:03 -0400",
    





    
    "snippet": "OverviewIn a previous post I created my own MongoDB deployment and installed with Kustomize.  Let‚Äôs use the ‚Äúofficial‚Äù Bitnami Helm Chart to install MongoDB.This installs MongoDB as a standalone (N...",
    "content": "OverviewIn a previous post I created my own MongoDB deployment and installed with Kustomize.  Let‚Äôs use the ‚Äúofficial‚Äù Bitnami Helm Chart to install MongoDB.This installs MongoDB as a standalone (NO High Availability) node.  For my purpose I‚Äôm also making it a statefulset so my backup scripts work the same regardless if the architecture is standalone or replicaset.helm install mongodb-ce oci://registry-1.docker.io/bitnamicharts/mongodb -n mongodb-ce --create-namespace \\--set architecture=standalone \\--set useStatefulSet=true \\--set service.type=LoadBalancer \\--set auth.rootUser=\"root\" \\--set auth.rootPassword=\"Candy123\""
  },
  
  {
    "title": "Get location information by IP address",
    "url": "/posts/locationbyip/",
    "categories": "Development",
    "tags": "python",
    "date": "2024-02-26 00:00:00 -0500",
    





    
    "snippet": "Author Ashutosh Krishna created the following post that easily illustrates how to gather location information by IP address using Python.https://www.freecodecamp.org/news/how-to-get-location-inform...",
    "content": "Author Ashutosh Krishna created the following post that easily illustrates how to gather location information by IP address using Python.https://www.freecodecamp.org/news/how-to-get-location-information-of-ip-address-using-python/"
  },
  
  {
    "title": "Complexity kills",
    "url": "/posts/complexitykills/",
    "categories": "",
    "tags": "k8s",
    "date": "2023-12-25 00:00:00 -0500",
    





    
    "snippet": "Before designing your next microservices architecture, consider this brilliant post by Andrei Taranchenko Death by a Thousand Microservices",
    "content": "Before designing your next microservices architecture, consider this brilliant post by Andrei Taranchenko Death by a Thousand Microservices"
  },
  
  {
    "title": "MongoDB Kubernetes Deployment",
    "url": "/posts/k8smongodb/",
    "categories": "DevOps",
    "tags": "mongodb, k8s",
    "date": "2023-02-21 20:30:43 -0500",
    





    
    "snippet": "OverviewWhile writing Tagging Asteroids with MongoDB I was able to quickly provision a cluster on the free tier of MongoDB Atlas. What I originally wanted was to quickly stand up a MongoDB instance...",
    "content": "OverviewWhile writing Tagging Asteroids with MongoDB I was able to quickly provision a cluster on the free tier of MongoDB Atlas. What I originally wanted was to quickly stand up a MongoDB instance in my Kubernetes environment but found most documentation too complex for my usecase.  Just give me a MongoDB ‚Äúdialtone‚Äù as quickly as possible without having to install the binaries on my system.NOTE:  This deployment pattern should not be used in production. Strongly recommend a StatefulSet for MongoDB Replica Sets.Easiest way to standup Kubernetes as a DeveloperInstall Docker on your machine then install kindManifestsYou will find all the code for this deployment on my GitHub https://github.com/fullaware/k8s-mongodbKustomizeThe kustomization.yaml is the entrypoint to deploying MongoDB on Kubernetes.  Kustomize allows us to package up all the other manifests (yaml files) and deploy them to a specific namespace (mongodb in this case).  Kustomize also allows us to generate secrets so that we don‚Äôt have to do the base64 encoding by hand.  In a production environment you would use something like Hashicorp Vault to centrally store passwords.apiVersion: kustomize.config.k8s.io/v1beta1kind: Kustomizationnamespace: mongodbresources:  - mongodb-namespace.yaml          # Create MongoDB namespace  - mongodb-dbinit-configmap.yaml   # Initialize DB with data  - mongodb-pvc.yaml                # Request storage  - mongodb-svc.yaml                # Expose MongoDB as service  - mongodb-deployment.yaml         # Deploy containersecretGenerator:                    - name: mongo-creds  literals:  - username=admin                  # MONGO_INITDB_ROOT_USERNAME  - password=Candy123               # MONGO_INITDB_ROOT_PASSWORDInitialize MongoDB container with data using a configmapI prefer this method for it‚Äôs simplicity but comes with a major downside.  You are limited to 1MB due to the objects size in etcd. If you need to initialize the database with more than 1MB, consider using an Init Container to download a mongodump file then mongorestore the file into the database.The MongoDB image on Docker Hub will look for all scripts found in its mountpoint at /docker-entrypoint-initdb.d and execute them in alphabetical order.Create a configmap and populate the data with the contents of a dbinit.js file like so [truncated for easier reading, see mongodb-dbinit-configmap.yaml]:apiVersion: v1kind: ConfigMapmetadata:  name: dbinit-scriptdata:  dbinit.js: |-    db = new Mongo().getDB(\"asteroids\");    db.createCollection('asteroids', { capped: false });    db.asteroids.insert([{    \"_id\": 1000,    \"name\": \"Bennu\",    \"elements\": [      100,      101,      108    ]    }])Persistent Volume ClaimFor our usecase we don‚Äôt want our data to disappear when we restart the deployment so we want to create a persistent volume claim.apiVersion: v1kind: PersistentVolumeClaimmetadata:  name: mongo-dataspec:  accessModes:    - ReadWriteOnce   resources:    requests:      storage: 1GiServiceHere we will expose the MongoDB deployment as a service on port 27017.  This will make it accessible to other applications running on the Kubernetes cluster.apiVersion: v1kind: Servicemetadata:  labels:    app: mongodb  name: mongodb-svcspec:  ports:  - port: 27017    protocol: TCP    targetPort: 27017  selector:    app: mongodb  type: ClusterIP DeploymentAll of our hard work comes together in the deployment.  Here we will map our persistent volume for our /data/db as well as our dbinit-script configmap.  Default username and password are provided by the secret that Kustomize generated earlier.apiVersion: apps/v1kind: Deploymentmetadata:  labels:    app: mongodb  name: mongodbspec:  replicas: 1  selector:    matchLabels:      app: mongodb  strategy: {}  template:    metadata:      labels:        app: mongodb    spec:      containers:      - image: mongo        name: mongo        args: [\"--dbpath\",\"/data/db\"]        env:        - name: MONGO_INITDB_ROOT_USERNAME          valueFrom:            secretKeyRef:              name: mongo-creds              key: username        - name: MONGO_INITDB_ROOT_PASSWORD          valueFrom:            secretKeyRef:              name: mongo-creds              key: password        volumeMounts:        - name: \"mongo-data-dir\"          mountPath: \"/data/db\"        - name: dbinit-script          mountPath: /docker-entrypoint-initdb.d       volumes:      - name: \"mongo-data-dir\"        persistentVolumeClaim:          claimName: \"mongo-data\"      - name: dbinit-script        configMap:          name: dbinit-scriptRunning MongoDB on Kubernetesgit clone https://github.com/fullaware/k8s-mongodb.gitcd k8s-mongodbThis next part is important, notice we will use a -k instead of -f which instructs kubectl to run the kustomization.yaml instead of just running all the yaml files in the folder.kubectl apply -k .Verify MongoDB serverFirst get shell access into the deployment.kubectl exec deployment/mongodb -n mongodb -it -- /bin/bashThen auth into the servermongosh -u admin -p Candy123Exit mongosh then exit from the deployment because now we want to access the MongoDB instance using either our programming language of choice, MongoDB Compass or mongosh from our local machine.Access deployment on localhostUse kubectl to forward the port 27017 from the mongodb-svc to localhostkubectl port-forward --address 0.0.0.0 svc/mongodb-svc 27017:27017 -n mongodbFrom there we should be able to use mongosh client to connect to the MongoDB instance by connecting to localhostmongosh -u admin -p Candy123Once we are in the Mongo Shell, let‚Äôs look for databasestest&gt; show dbsadmin      100.00 KiBasteroids   80.00 KiBconfig      72.00 KiBlocal       72.00 KiBNow use the asteroids databasetest&gt; use asteroidsswitched to db asteroidsNext we will look at the collections in this databaseasteroids&gt; show collectionsasteroidselementsFind all the documents in the asteroids collectionasteroids&gt; db.asteroids.find()[  { _id: 1000, name: 'Bennu', elements: [ 100, 101, 108 ] },  { _id: 1001, name: 'Ceres', elements: [ 106, 103, 108 ] },  { _id: 1002, name: 'Pallas', elements: [ 103, 102, 105 ] },  { _id: 1003, name: 'Juno', elements: [ 107, 106, 100 ] },  { _id: 1004, name: 'Vesta', elements: [ 108, 101, 103 ] },  { _id: 1005, name: 'Astraea', elements: [ 105, 101, 106 ] }]"
  },
  
  {
    "title": "Tagging Asteroids with MongoDB",
    "url": "/posts/mongodbtags/",
    "categories": "Development",
    "tags": "mongodb",
    "date": "2023-02-15 00:00:00 -0500",
    





    
    "snippet": "ObjectiveLet‚Äôs use MongoDB to build an asteroid tagging engine that allows us to assign multiple elements to any asteroid then query based on those elements.Schema designArrays allow you to assign ...",
    "content": "ObjectiveLet‚Äôs use MongoDB to build an asteroid tagging engine that allows us to assign multiple elements to any asteroid then query based on those elements.Schema designArrays allow you to assign an arbitrary number of elements to a document.  MongoDB allows you to insert, update and delete elements within arrays.A requirement of our tagging engine is we want to be able to change the name of the element without having to update each document with the new name.  For this we will be keeping the element labels in a separate collection and reference them by _id just as we would in a SQL database.  This works out great when we want to add metadata to the elements such as atomic weight or symbol.Collection : ElementsFor this example we will use simple _id numbers instead of ObjectIds.{    \"_id\" : 100,    \"label\" : \"iron\"},{    \"_id\" : 101,    \"label\" : \"nickel\"   },{    \"_id\" : 102,    \"label\" : \"cobalt\"   },{    \"_id\" : 103,    \"label\" : \"platinum\"   },{    \"_id\" : 104,    \"label\" : \"olivine\"   },{    \"_id\" : 105,    \"label\" : \"potassium\"   },{    \"_id\" : 106,    \"label\" : \"silicon\"   },{    \"_id\" : 107,    \"label\" : \"magnesium\"   },{    \"_id\" : 108,    \"label\" : \"phosphorus\"},{    \"_id\" : 109,    \"label\" : \"silver\"},{    \"_id\" : 110,    \"label\" : \"gold\"}Collection : Asteroids{    \"_id\" : 1000,    \"name\" : \"Bennu\",    \"elements\" : [100, 101, 108]},{    \"_id\" : 1001,    \"name\" : \"Ceres\",    \"elements\" : [106, 103, 108]},{    \"_id\" : 1002,    \"name\" : \"Pallas\",    \"elements\" : [103, 102, 105]},{    \"_id\" : 1003,    \"name\" : \"Juno\",    \"elements\" : [107, 106, 100]},{    \"_id\" : 1004,    \"name\" : \"Vesta\",    \"elements\" : [108, 101, 103]},{    \"_id\" : 1005,    \"name\" : \"Astraea\",    \"elements\" : [105, 101, 106]}$lookup - MongoDB JOIN[    {        '$lookup': {            'from': 'elements',             'localField': 'elements',             'foreignField': '_id',             'as': 'result'        }    }]Returns all asteroid documents with the cooresponding element names from the elements collection. Example:{  \"_id\": 1000,  \"name\": \"Bennu\",  \"elements\": [    100,    101,    108  ],  \"result\": [    {      \"_id\": 100,      \"label\": \"iron\"    },    {      \"_id\": 101,      \"label\": \"nickel\"    },    {      \"_id\": 108,      \"label\": \"phosphorus\"    }  ]}This pattern allows us to rename the element labels as needed without having to update the 1000‚Äôs of asteroids with that specific element name.  This model is certainly DRY [Don‚Äôt Repeat Yourself] as well as very SQL like, having a foreign key relationship from the elements array to the Elements collection.Find the nickelFind all the asteroids that are known to have nickel in them.[    {        '$match': {            'label': 'nickel'        }    }, {        '$lookup': {            'from': 'asteroids',             'localField': '_id',             'foreignField': 'elements',             'as': 'asteroids'        }    }]Returns the element document with each of the asteroids embedded in the asteroids array.{  \"_id\": 101,  \"label\": \"nickel\",  \"asteroids\": [    {      \"_id\": 1000,      \"name\": \"Bennu\",      \"elements\": [        100,        101,        108      ]    },    {      \"_id\": 1004,      \"name\": \"Vesta\",      \"elements\": [        108,        101,        103      ]    },    {      \"_id\": 1005,      \"name\": \"Astraea\",      \"elements\": [        105,        101,        106      ]    }  ]}Inserting multiple elements into an arrayAccording to the document, we see that the asteroid Bennu is made up of iron, nickel, and phosphorus.  Let‚Äôs add a couple more elements like silver and gold.We will do this by using the MongoDB operator $addToSet.db.asteroids.update_one(    {\"_id\": 1000},    {\"$addToSet\": {        \"elements\": {            \"$each\":            [109,110]}}})Gold streakLets imagine new sensor technology has allowed us to find gold in not one but MULTIPLE asteroids, let‚Äôs update the collection with this new information!  We are going to reuse the $addToSet operator here so that if we wanted to add multiple elements to multiple asteroids, we could totally do so.db.asteroids.update_many(    {        '_id': {            '$in': [                1002,                1003            ]        }    },    {\"$addToSet\": {        \"elements\": {            \"$each\":            [110]}}})Mistakes happenSometimes the sensors are all wrong, let‚Äôs delete this element from those asteroids.  Again I‚Äôm going to use an operator that allows you to delete multiple elements from multiple asteroids.  In this case we are only going to delete 110 from asteroids 1002 and 1003.db.asteroids.update_many(    {        '_id': {            '$in': [                1002,                1003            ]        }    },    {\"$pull\": {        \"elements\": {            \"$in\":            [110]}}})"
  },
  
  {
    "title": "Firefox: The WidevineCdm plugin has crashed",
    "url": "/posts/firefoxwildvine/",
    "categories": "",
    "tags": "linux",
    "date": "2022-12-31 10:08:07 -0500",
    





    
    "snippet": "Firefox 108.0.1 (64-bit) - ‚ÄúThe WidevineCdm plugin has crashed‚ÄùWhile studying for my CKAD on Udemy over the holidays I encountered this error when attempting to open ANYTHING that had DRM protected...",
    "content": "Firefox 108.0.1 (64-bit) - ‚ÄúThe WidevineCdm plugin has crashed‚ÄùWhile studying for my CKAD on Udemy over the holidays I encountered this error when attempting to open ANYTHING that had DRM protected video; Udemy, Netflix, Hulu, etc.  Some recommended fixes included maintaining a separate firefox binary.  Luckily I found the fix on AskUbuntu.comEdited /etc/apparmor.d/usr.bin.firefox :  Below the line:          # per-user firefox configuration        Insert the line:          owner @{HOME}/.{firefox,mozilla}/**/gmp-widevinecdm/**/libwidevinecdm.so m,         After that, you can reboot your computer (or reload AppArmor‚Äôs rules with:          apparmor_parser --replace /etc/apparmor.d/usr.bin.firefox      "
  },
  
  {
    "title": "Pi-Hole Wildcard DNS",
    "url": "/posts/piholewildcarddns/",
    "categories": "",
    "tags": "homelab, k8s",
    "date": "2022-12-30 00:00:00 -0500",
    





    
    "snippet": "In order to access Kubernetes applications via my ingress projectcontour.io, I‚Äôll use a wildcard DNS entry.Unfortunately this isn‚Äôt a simple entry in the web UI for Pi-hole (yet?).  A quick search ...",
    "content": "In order to access Kubernetes applications via my ingress projectcontour.io, I‚Äôll use a wildcard DNS entry.Unfortunately this isn‚Äôt a simple entry in the web UI for Pi-hole (yet?).  A quick search and Brandon Rozek had documented the steps to add a wildcard DNS entry in dnsmasq.First, lets get the External-IP of our envoy LoadBalancer service.  Mine shows as 10.28.28.80.kubectl get service envoy -n projectcontourNAME    TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGEenvoy   LoadBalancer   10.103.158.9   10.28.28.80   80:32032/TCP,443:31610/TCP   43hNext we will need to SSH into our Pi-Hole and create a new config file located at /etc/dnsmasq.d/03-custom-dns.confaddress=/k8s.home.fullaware.com/10.28.28.80Next let‚Äôs restart Pi-Hole service to reload the new config.sudo systemctl restart pihole-FTLNow when I dig for the k8s.home.fullaware.com domain it comes up with the IP address of the envoy LoadBalancer.;; QUESTION SECTION:;k8s.home.fullaware.com.                IN      A;; ANSWER SECTION:k8s.home.fullaware.com. 0       IN      A       10.28.28.80This allows me to create an ingress with the name asteroids.k8s.home.fullaware.com to point to my hosted app asteroids.apiVersion: networking.k8s.io/v1kind: Ingressmetadata:  name: asteroids-app  namespace: asteroidsspec:  rules:  - host: asteroids.k8s.home.fullaware.com    http:      paths:        - pathType: Prefix          path: \"/\"          backend:            service:              name: asteroids-app              port:                number: 8080"
  },
  
  {
    "title": "Homelab",
    "url": "/posts/homelab/",
    "categories": "",
    "tags": "homelab, vmware",
    "date": "2022-12-29 00:00:00 -0500",
    





    
    "snippet": "ObjectiveTo have a single server with enough power to run nested vSphere 8 and Tanzu Kubernetes Grid with NSX.  But with vSphere 8 I wanted to make sure I had something on the HCL.  Dell PowerEdge ...",
    "content": "ObjectiveTo have a single server with enough power to run nested vSphere 8 and Tanzu Kubernetes Grid with NSX.  But with vSphere 8 I wanted to make sure I had something on the HCL.  Dell PowerEdge R740 will carry the homelab moving forward.Hardware  Dell PowerEdge R740          2 x Intel Xeon Gold 6132 2.6Ghz 14-Core      256GB RAM - 8 x 32GB 2400T DDR4 ECC      H730p 2gb Cache Raid Controller PCIe      2x 1TB SSD in Raid 1 (Samsung 850)      Broadcom 2x 10Gbe SFP / 2x 1Gbe Network Daughter Card (165T0)      iDrac 9 Enterprise      2x 750w Platinum Power Supplies      SABRENT NVMe M.2 SSD to PCIe Riser  https://www.amazon.com/gp/product/B084GDY2PW/      WD_BLACK 2TB SN770 NVMe https://www.amazon.com/gp/product/B09QV5KJHV        Dell PowerEdge R720          2 x Intel(R) Xeon(R) CPU E5-2640 6-Core      128GB RAM - 16 x 8GB ECC PC3-12800 1333Mhz      Replaced PERC 310 RAID Controller with LSI SAS 2008 flashed to IT mode.      Replaced DVD with Samsung SSD 860 EVO 500GB, used as boot drive https://www.youtube.com/watch?v=Nx9-BK0WsxU      SoftwareVMware vSphere 8 Licenses provided by VMUG Advantage membershipConfiguration of R720  Install ESXi 8 to 500GB SSD on R720.          YES I received the warning regarding unsupported CPU.  This has yet to keep me from using vSphere 8 on this server.  I did have to get creative with storage since my LSI2008 or PERC 310 aren‚Äôt supported.      After installation I had 337.5GB for Datastore1 which I renamed to local_ssd500GB and have so far managed to squeeze 9 VMs onto it thanks to thin provisioning.        Install pi-hole on Ubuntu 22.04 LTS VM          Configure pi-hole with recursive DNS and add DNS entries for vCenter vm.        Install vCenter  Enable PCIPassthrough for SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon]  Install TrueNAS Core as a VM          Add SAS2008 HBA to VM as additional PCI device      Add drives to be used as iSCSI target        Install vSphere 8 as VM  Provision 4 new Ubuntu Server 22.04 VMs for Kubernetes          Manual      Via Ansible - https://github.com/fullaware/k8s-iac#installing-kubernetes-2-installk8s      Configuration of R740 coming soon"
  },
  
  {
    "title": "K8s Waiting for Condition=Available=True",
    "url": "/posts/k8s-wait/",
    "categories": "DevOps",
    "tags": "k8s",
    "date": "2022-12-24 10:17:05 -0500",
    





    
    "snippet": "While working with Ansible for standing up a vanilla Kubernetes 1.25.5 cluster I found myself separating the the initial bootstrapping of the cluster, which includes intalling the CNI antrea from t...",
    "content": "While working with Ansible for standing up a vanilla Kubernetes 1.25.5 cluster I found myself separating the the initial bootstrapping of the cluster, which includes intalling the CNI antrea from the rest of the configuration (metrics,metallb,contour) due to waiting for antrea to become Ready.Found this post from Fabian Lee# this wait for 'Available=True' only works for initial deployment, not rollingkubectl wait deployment -n default golang-hello-world-web --for condition=Available=True --timeout=90s# wait using 'rollout status'kubectl rollout status deployment golang-hello-world-web -n default --timeout=90s"
  }
  
]

