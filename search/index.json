[{"content":"Objective Let\u0026rsquo;s use MongoDB to build an asteroid tagging engine that allows us to assign multiple elements to any asteroid then query based on those elements.\nSchema design Arrays allow you to assign an arbitrary number of elements to a document. MongoDB allows you to insert, update and delete elements within arrays.\nAnother requirement of our tagging engine is we want to be able to change the name of the tags without having to update each document with the new name. For this we will be keeping the tag labels in a separate collection.\nCollection : Elements For this example we will use simple _id numbers instead of ObjectIds.\n{ \u0026quot;_id\u0026quot; : 100, \u0026quot;label\u0026quot; : \u0026quot;iron\u0026quot; },{ \u0026quot;_id\u0026quot; : 101, \u0026quot;label\u0026quot; : \u0026quot;nickel\u0026quot; },{ \u0026quot;_id\u0026quot; : 102, \u0026quot;label\u0026quot; : \u0026quot;cobalt\u0026quot; },{ \u0026quot;_id\u0026quot; : 103, \u0026quot;label\u0026quot; : \u0026quot;platinum\u0026quot; },{ \u0026quot;_id\u0026quot; : 104, \u0026quot;label\u0026quot; : \u0026quot;olivine\u0026quot; },{ \u0026quot;_id\u0026quot; : 105, \u0026quot;label\u0026quot; : \u0026quot;potassium\u0026quot; },{ \u0026quot;_id\u0026quot; : 106, \u0026quot;label\u0026quot; : \u0026quot;silicon\u0026quot; },{ \u0026quot;_id\u0026quot; : 107, \u0026quot;label\u0026quot; : \u0026quot;magnesium\u0026quot; },{ \u0026quot;_id\u0026quot; : 108, \u0026quot;label\u0026quot; : \u0026quot;phosphorus\u0026quot; } Collection : Asteroids { \u0026quot;name\u0026quot; : \u0026quot;Bennu\u0026quot;, \u0026quot;elements\u0026quot; : [100, 101, 108] },{ \u0026quot;name\u0026quot; : \u0026quot;Ceres\u0026quot;, \u0026quot;elements\u0026quot; : [106, 103, 108] },{ \u0026quot;name\u0026quot; : \u0026quot;Pallas\u0026quot;, \u0026quot;elements\u0026quot; : [103, 102, 105] },{ \u0026quot;name\u0026quot; : \u0026quot;Juno\u0026quot;, \u0026quot;elements\u0026quot; : [107, 106, 100] },{ \u0026quot;name\u0026quot; : \u0026quot;Vesta\u0026quot;, \u0026quot;elements\u0026quot; : [108, 101, 103] },{ \u0026quot;name\u0026quot; : \u0026quot;Astraea\u0026quot;, \u0026quot;elements\u0026quot; : [105, 101, 106] } $lookup - MongoDB JOIN [ { '$lookup': { 'from': 'elements', 'localField': 'elements', 'foreignField': '_id', 'as': 'result' } } ] Returns\n{ \u0026quot;_id\u0026quot;: { \u0026quot;$oid\u0026quot;: \u0026quot;63ed984c0768d8f090898024\u0026quot; }, \u0026quot;name\u0026quot;: \u0026quot;Bennu\u0026quot;, \u0026quot;elements\u0026quot;: [ 100, 101, 108 ], \u0026quot;result\u0026quot;: [ { \u0026quot;_id\u0026quot;: 100, \u0026quot;label\u0026quot;: \u0026quot;iron\u0026quot; }, { \u0026quot;_id\u0026quot;: 101, \u0026quot;label\u0026quot;: \u0026quot;nickel\u0026quot; }, { \u0026quot;_id\u0026quot;: 108, \u0026quot;label\u0026quot;: \u0026quot;phosphorus\u0026quot; } ] } ","date":"2023-02-15","permalink":"https://www.fullaware.com/posts/mongodbtags/","tags":["mongodb","python"],"title":"Tagging Asteroids with MongoDB"},{"content":"Firefox 108.0.1 (64-bit) - \u0026ldquo;The WidevineCdm plugin has crashed\u0026rdquo;\nWhile studying for my CKAD on Udemy over the holidays I encountered this error when attempting to open ANYTHING that had DRM protected video; Udemy, Netflix, Hulu, etc. Some recommended fixes included maintaining a separate firefox binary. Luckily I found the fix on AskUbuntu.com\nEdited /etc/apparmor.d/usr.bin.firefox :\nBelow the line:\n# per-user firefox configuration Insert the line:\nowner @{HOME}/.{firefox,mozilla}/**/gmp-widevinecdm/**/libwidevinecdm.so m, After that, you can reboot your computer (or reload AppArmor\u0026rsquo;s rules with:\napparmor_parser --replace /etc/apparmor.d/usr.bin.firefox ","date":"2022-12-31","permalink":"https://www.fullaware.com/posts/firefoxwildvine/","tags":["linux"],"title":"Firefox: The WidevineCdm plugin has crashed"},{"content":"In order to access Kubernetes applications via my ingress projectcontour.io, I\u0026rsquo;ll use a wildcard DNS entry.\nUnfortunately this isn\u0026rsquo;t a simple entry in the web UI for Pi-hole (yet?). A quick search and Brandon Rozek had documented the steps to add a wildcard DNS entry in dnsmasq.\nFirst, lets get the External-IP of our envoy LoadBalancer service. Mine shows as 10.28.28.80.\nkubectl get service envoy -n projectcontour NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE envoy LoadBalancer 10.103.158.9 10.28.28.80 80:32032/TCP,443:31610/TCP 43h Next we will need to SSH into our Pi-Hole and create a new config file located at /etc/dnsmasq.d/03-custom-dns.conf\naddress=/k8s.home.fullaware.com/10.28.28.80 Next let\u0026rsquo;s restart Pi-Hole service to reload the new config.\nsudo systemctl restart pihole-FTL Now when I dig for the k8s.home.fullaware.com domain it comes up with the IP address of the envoy LoadBalancer.\n;; QUESTION SECTION: ;k8s.home.fullaware.com. IN A ;; ANSWER SECTION: k8s.home.fullaware.com. 0 IN A 10.28.28.80 This allows me to create an ingress with the name asteroids.k8s.home.fullaware.com to point to my hosted app asteroids.\napiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: asteroids-app namespace: asteroids spec: rules: - host: asteroids.k8s.home.fullaware.com http: paths: - pathType: Prefix path: \u0026quot;/\u0026quot; backend: service: name: asteroids-app port: number: 8080 ","date":"2022-12-30","permalink":"https://www.fullaware.com/posts/piholewildcarddns/","tags":["homelab","k8s"],"title":"Pi-Hole Wildcard DNS"},{"content":"Objective To have a single server with enough power to run nested vSphere 8 and Tanzu Kubernetes Grid with NSX. But with vSphere 8 I wanted to make sure I had something on the HCL. Dell PowerEdge R740 will carry the homelab moving forward.\nHardware Dell PowerEdge R740 2 x Intel Xeon Gold 6132 2.6Ghz 14-Core 256GB RAM - 8 x 32GB 2400T DDR4 ECC H730p 2gb Cache Raid Controller PCIe 2x 1TB SSD in Raid 1 (Samsung 850) Broadcom 2x 10Gbe SFP / 2x 1Gbe Network Daughter Card (165T0) iDrac 9 Enterprise 2x 750w Platinum Power Supplies SABRENT NVMe M.2 SSD to PCIe Riser https://www.amazon.com/gp/product/B084GDY2PW/ WD_BLACK 2TB SN770 NVMe https://www.amazon.com/gp/product/B09QV5KJHV Dell PowerEdge R720 2 x Intel(R) Xeon(R) CPU E5-2640 6-Core 128GB RAM - 16 x 8GB ECC PC3-12800 1333Mhz Replaced PERC 310 RAID Controller with LSI SAS 2008 flashed to IT mode. Replaced DVD with Samsung SSD 860 EVO 500GB, used as boot drive https://www.youtube.com/watch?v=Nx9-BK0WsxU Software VMware vSphere 8 Licenses provided by VMUG Advantage membership\nConfiguration of R720 Install ESXi 8 to 500GB SSD on R720. YES I received the warning regarding unsupported CPU. This has yet to keep me from using vSphere 8 on this server. I did have to get creative with storage since my LSI2008 or PERC 310 aren\u0026rsquo;t supported. After installation I had 337.5GB for Datastore1 which I renamed to local_ssd500GB and have so far managed to squeeze 9 VMs onto it thanks to thin provisioning. Install pi-hole on Ubuntu 22.04 LTS VM Configure pi-hole with recursive DNS and add DNS entries for vCenter vm. Install vCenter Enable PCIPassthrough for SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon] Install TrueNAS Core as a VM Add SAS2008 HBA to VM as additional PCI device Add drives to be used as iSCSI target Install vSphere 8 as VM Provision 4 new Ubuntu Server 22.04 VMs for Kubernetes Manual Via Ansible - https://github.com/fullaware/k8s-iac#installing-kubernetes-2-installk8s Configuration of R740 coming soon","date":"2022-12-29","permalink":"https://www.fullaware.com/posts/homelab/","tags":["homelab","vmware"],"title":"Homelab"},{"content":"While working with Ansible for standing up a vanilla Kubernetes 1.25.5 cluster I found myself separating the the initial bootstrapping of the cluster, which includes intalling the CNI antrea from the rest of the configuration (metrics,metallb,contour) due to waiting for antrea to become Ready.\nFound this post from Fabian Lee\n# this wait for 'Available=True' only works for initial deployment, not rolling kubectl wait deployment -n default golang-hello-world-web --for condition=Available=True --timeout=90s # wait using 'rollout status' kubectl rollout status deployment golang-hello-world-web -n default --timeout=90s ","date":"2022-12-24","permalink":"https://www.fullaware.com/posts/k8s-wait/","tags":["k8s"],"title":"K8s Waiting for Condition=Available=True"},{"content":"Future home of Kubernetes, Python, VMware and homelab efforts.\nJoin me as I share my attempts at:\nUpgrade a Dell R720 with NVME storage and ESXi 8. Provisioning Kubernetes clusters using Ansible. Maintaining a Python webapp microservice for mining asteroids. Any technology tips I discover along the way. ","date":"2022-12-23","permalink":"https://www.fullaware.com/posts/comingsoon/","tags":["homelab","k8s","python","vmware"],"title":"Coming Soon"}]